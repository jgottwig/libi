<?php

/**
 * @file
 * Message notify staff module.
 */

use Drupal\Core\Entity\ContentEntityBase;
use Drupal\node\Entity\Node;
use Drupal\comment\Entity\Comment;
use Drupal\user\Entity\User;
use Drupal\message\Entity\Message;

/**
 * Implements hook_ENTITY_TYPE_insert() for node entities.
 */
function message_notify_staff_node_insert(Node $node) {
  if ($node->bundle() == "article") {
    $notifier = \Drupal::service('message_notify.sender');
    $message = Message::create(['template' => 'new_content', 'uid' => '1']);
    $message->set('field_node_reference', $node);
    $message->set('field_published', $node->isPublished());
    $message->save();

    $notifier->send($message, [], 'message_digest:ten_minutes');

    $messenger = \Drupal::messenger();
    $messenger->addMessage('Added to message digest', $messenger::TYPE_WARNING);
    \Drupal::logger('message_notify_staff')->notice($message['Article node ' . $node->nid . ' added to digest']);
  }
}

/**
 * Implements hook_mail_alter().
 */
function message_notify_staff_mail_alter(&$message) {
  if ($message['id'] == 'message_digest_digest') {
    $title = \Drupal::config('system.site')->get('name');
    $date = new DateTime('NOW');
    $message['subject'] = t('@title Digest for @date', ['@title' => $title, '@date' => $date->format('l, F jS i')]);
  }
    \Drupal::logger('message_notify_staff')->notice($message['body'][0]);
}
